[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "repo-to-pdf"
version = "2.0.0"
description = "Convert GitHub repositories to PDF documents with syntax highlighting and Chinese support"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Repo-to-PDF Contributors"}
]
keywords = ["pdf", "github", "converter", "documentation", "syntax-highlighting", "chinese"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: Markdown",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

dependencies = [
    "GitPython>=3.1.42",
    "PyYAML>=6.0.1",
    "markdown>=3.5.2",
    "beautifulsoup4>=4.12.3",
    "cairosvg>=2.7.1",
    "svglib>=1.5.1",
    "reportlab>=4.0.9",
    "requests>=2.31.0",
    "tqdm>=4.66.0",
    "pydantic>=2.0.0",
    "aiofiles>=23.0.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "coverage>=7.3.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
    "bandit>=1.7.5",
    "pre-commit>=3.3.0",
    "types-PyYAML",
    "types-requests",
    "types-beautifulsoup4",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.23.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/githubRepo2Pdf"
Documentation = "https://github.com/yourusername/githubRepo2Pdf/blob/main/README.md"
Repository = "https://github.com/yourusername/githubRepo2Pdf.git"
"Bug Tracker" = "https://github.com/yourusername/githubRepo2Pdf/issues"

[project.scripts]
repo-to-pdf = "repo_to_pdf.cli:main"

[tool.setuptools]
packages = ["repo_to_pdf", "repo_to_pdf.core", "repo_to_pdf.processors",
            "repo_to_pdf.converters", "repo_to_pdf.git", "repo_to_pdf.stats",
            "repo_to_pdf.templates"]

[tool.setuptools.package-data]
repo_to_pdf = ["py.typed"]

# ============================================================================
# Black - Code Formatter
# ============================================================================
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | repo-workspace
  | repo-pdfs
  | temp_conversion_files
)/
'''

# ============================================================================
# isort - Import Sorter
# ============================================================================
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip_glob = ["venv/*", "repo-workspace/*", "repo-pdfs/*"]

# ============================================================================
# mypy - Static Type Checker
# ============================================================================
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "git.*",
    "cairosvg.*",
    "svglib.*",
    "reportlab.*",
    "markdown.*",
]
ignore_missing_imports = true

# ============================================================================
# pytest - Testing Framework
# ============================================================================
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--cov=repo_to_pdf",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as performance benchmarks",
]

# ============================================================================
# coverage - Code Coverage
# ============================================================================
[tool.coverage.run]
source = ["repo_to_pdf"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# ============================================================================
# bandit - Security Linter
# ============================================================================
[tool.bandit]
exclude_dirs = ["tests", "venv", "repo-workspace"]
skips = ["B101", "B601"]  # Skip assert_used and paramiko_calls

# ============================================================================
# pylint - Code Linter
# ============================================================================
[tool.pylint.main]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
]
